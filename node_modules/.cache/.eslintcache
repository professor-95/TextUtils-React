[{"/home/taeim/react2022/myapp/src/index.js":"1","/home/taeim/react2022/myapp/src/App.js":"2","/home/taeim/react2022/myapp/src/reportWebVitals.js":"3","/home/taeim/react2022/myapp/src/components/Navbar.js":"4","/home/taeim/react2022/myapp/src/components/TextBox.js":"5","/home/taeim/react2022/myapp/src/components/About.js":"6"},{"size":604,"mtime":1665286682400,"results":"7","hashOfConfig":"8"},{"size":904,"mtime":1665304867803,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1665250895427,"results":"10","hashOfConfig":"8"},{"size":2071,"mtime":1665305141699,"results":"11","hashOfConfig":"8"},{"size":1601,"mtime":1665294554468,"results":"12","hashOfConfig":"8"},{"size":3449,"mtime":1665296745864,"results":"13","hashOfConfig":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"15afvby",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3v8lc1","/home/taeim/react2022/myapp/src/index.js",["35"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Navbar } from './components/Navbar';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n    {/* <Navbar /> */}\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/taeim/react2022/myapp/src/App.js",[],[],"/home/taeim/react2022/myapp/src/reportWebVitals.js",[],[],"/home/taeim/react2022/myapp/src/components/Navbar.js",["36","37","38"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n// import { a } from 'react-router-dom';\n\nexport const Navbar = (props) => {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          {props.title}\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\n                Home\n              </a>\n            </li>\n          </ul>\n          {/* <form className=\"d-flex\" role=\"search\">\n            <input\n              className=\"form-control me-2\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <button className=\"btn btn-outline-success\" type=\"submit\">\n              Search\n            </button>\n          </form> */}\n          <div\n            className={`form-check form-switch text-${\n              props.mode === 'dark' ? 'light' : 'dark'\n            }`}\n          >\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              role=\"switch\"\n              id=\"flexSwitchCheckDefault\"\n              onClick={props.ghgMode}\n            />\n            <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">\n              Dark Mode\n            </label>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\nNavbar.propTypes = {\n  title: PropTypes.string,\n};\n","/home/taeim/react2022/myapp/src/components/TextBox.js",[],[],"/home/taeim/react2022/myapp/src/components/About.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":16},{"ruleId":"39","severity":1,"message":"43","line":3,"column":10,"nodeType":"41","messageId":"42","endLine":3,"endColumn":18},{"ruleId":"44","severity":1,"message":"45","line":12,"column":9,"nodeType":"46","endLine":12,"endColumn":46},{"ruleId":"44","severity":1,"message":"45","line":29,"column":15,"nodeType":"46","endLine":29,"endColumn":75},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]